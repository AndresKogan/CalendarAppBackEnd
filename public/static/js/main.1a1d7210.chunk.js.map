{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingfinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","eventoGuardado","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a1d7210.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login ',\r\n    authLogin: '[auth] Login ',\r\n    authStartRegister: '[auth] Start Register ',\r\n    authStartTokenREnew: '[auth] Start token renew ',\r\n    authLogout: '[auth] Logout ',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\"\r\n\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n\r\n\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    })\r\n    )\r\n\r\n}","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.eventoGuardado.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent })\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n\r\n\r\n\r\n\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogOut = () => ({\r\n    type: types.eventLogout\r\n});","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogOut } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else {\r\n\r\n            dispatch(checkingfinish());\r\n        }\r\n\r\n\r\n    }\r\n};\r\nconst checkingfinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogOut());\r\n        dispatch(logout());\r\n    }\r\n};\r\n\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'andreskm@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Andrés Kogan',\r\n        rEmail: 'andreskm@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n\r\n            </span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: 'Evento',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        }\r\n        else {\r\n            setFormValues(initEvent)\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n  \r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n\r\n            Swal.fire('Error', 'La fecha de fin debe ser mayor que la fecha de inicio.', 'error')\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        else {\r\n\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{(activeEvent) ? 'Editar evento' : 'Nuevo Evento'}</h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <div>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}  `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n\r\n        dispatch(uiOpenModal())\r\n    }\r\n    const onSelect = (e) => {\r\n\r\n        dispatch(eventSetActive(e))\r\n\r\n    }\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e);\r\n\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n\r\n        return { style }\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent &&\r\n                <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component {...props} />\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Cargando</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid} />\r\n                    <PrivateRoute\r\n                        exact path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n\n  <CalendarApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}